<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>函式綁定物件 this basic toturial</title>
</head>
<body>
    <script>
        
        // situation 1 : 獨立的函式
        // function test(){
        //     // this 就是window物件
        //     console.log(this);
        //     console.log(this.innerWidth);
        // }
        // test();

        // situation 2 : 物件的方法
        // let obj = {
        //     x : 3,
        //     test : function(){
        //         // tjis就是方法所屬的物件本身
        //         console.log(this);
        //         // 印出物件屬性x
        //         console.log(this.x);
        //     }
        // }
        // obj.test();

        // situation 3 : 事件處理函式
        // var num = 0;
        // document.addEventListener("click", function(){
        //     // this就是觸發事件的對象物件(document)
        //     console.log(this);
        //     num++;
        //     this.body.innerHTML = "clicked : " + num;
        // });

        // situation 4 : 建構函式
        // function Point(){
        //     // this就是瀏覽器自動幫我們新建立好的空白物件
        //     console.log(this);
        //     this.x = 3;
        //     this.y = 4;
        // }
        // let p1 = new Point();
        // console.log(p1);

    </script>
</body>
</html>